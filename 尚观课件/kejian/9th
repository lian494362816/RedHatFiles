
三种结构：
	顺序结构：
	选择结构：
		格式一：
			if [ con ]
			then
				cmd
			fi
		格式二：
			if [ con ]
			then
				cmd1	满足条件则执行
			else
				cmd2	不满条件则执行
			fi
		格式三：嵌套
			if [ con ]
			then
				.....	
			else
				.....
			fi
		判断闰年条件：能被400整除 -> yes
					 能被4整除
		逻辑运算符 con1 con2 ... conn
			逻辑与：&&
				每一个条件都为真，则结果为真，如果有一个条件为假，则结果为假。
				[[ con1 && con2 && con3 && ... && conn ]]
				[ con1 ] && [ con2 ] && [ con3 ] && ... && [ conn ]
				[ con1 -a con2 -a con3 -a ... -a conn ]

				
			逻辑或：||
				如果所有条件都为假，则结果为假，如果有一个条件为真，则结果为真。
				[[ con1 || con2 || con3 || ... || conn ]]
				[ con1 ] || [ con2 ] || [ con3 ] || ... || [ conn ]
				[ con1 -o con2 -o con3 -o ... -o conn ]

			逻辑非：!
				逻辑真和逻辑假

		格式四：
			if [ con1 ]
			then
				cmd1
			elif [ con2 ]
			then
				cmd2
			elif [ con3 ]
			then
				cmd3
			........
			else
				cmd_failed
			fi

		练习：
			90 => 优秀
			70 ~ 90 => 良好
			60 ~ 70 => 及格
			60     	=> 较差
					  
		格式五：
			case $varname in
				value1)
					cmd1
					;;
				value2)
					cmd2
					;;
				.....
				*)	表示所有条件都不满足，才会执行
					cmd_failed
					;;
			esac
	if后面可以跟命令
		if cmd
		then
		fi
	判断文件：
		-e filename	: 判断文件是否存在
		-f filename	: 判断文件是否存在，且是一个普通文件
		-b filename	: 判断文件是否存在，且是一个块设备类文件
		-c filename	: 判断文件是否存在，且是一个字设备符类文件
		-d filename	: 判断文件是否存在，且是一个目录文件
		-L filename	: 判断文件是否存在，且是一个链接文件
		-S filename	: 判断文件是否存在，且是一个套接子文件
		-p filename	: 判断文件是否存在，且是一个管道文件

		-r filename : 判断文件是否存在，且当前用户是否对其可读
		-w filename : 判断文件是否存在，且当前用户是否对其可写
		-x filename : 判断文件是否存在，且当前用户是否对其可执行

		练习：
			判断文件是否存在，如果存在，则判断当前用户对文件权限(其他用户测试，不用root)



	循环结构：
		for
			格式一
				for var in value1 value2 ... valuen
				do
					cmd
				done

			格式二：
				for var in `seq stat_value step_value end_value`
				do
					cmd
				done

				默认缺省起始值和步长 1 1
			格式三
				for ((i = 1; i < 10; i++))
				do
					cmd
				done
			格式四：嵌套
				for (())
				do
					for (())
					do
						......
					done
					......
				done
			案例：
				#!/bin/bash

				for ((i = 0; i < 5; i++))
				do
					for ((j = 0; j <= i; j++))
					do
						echo -n "* "
					done
					echo
				done
			练习：1 + 2 + 3 + ... + 100 = ?

		一个循环由4部分构成：
			for ((i = 0; i < 10; i++))
			do
				echo $i
			done

			i = 0 	: 初始化部分 	1	只会执行一次
			i < 10 	: 条件部分 		2
			i++		: 增量部分 		3
			echo $i	: 循环体		4

			循环执行顺序：
				1 -> 2 -> 4 -> 3 ->2 -> 4 -> 3 ....

		
		while
			格式一
				while [ con ]
				do
					cmd
				done

			格式二：
				while [ con ]
				do
					while []
					do
						....
					done
					......
				done
	练习：
		实现 2 + 4 + 6 + ... + 100 = ?
		99
		打印空三角形

	homework:
		1 实现自动上传作业和下载课间
		2 输入坐标，显示象限
		3 实现4种三角形












